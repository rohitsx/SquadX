services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    env_file:
      - ./client/.env
    depends_on:
      - backend
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./server/.env
    depends_on:
      - postgres
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development

  postgres:
    image: postgres:latest
    container_name: host
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: dummyPass
      POSTGRES_DB: criminalLol
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  mongodb:
    image: mongo:latest
    container_name: criminalLol_mongoDb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=myuser
      - MONGO_INITDB_ROOT_PASSWORD=dummyPass
      - MONGO_INITDB_DATABASE=criminalLol
    volumes:
      - mongodata:/data/db 
    healthcheck: 
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

volumes:
  pgdata:
  mongodata:
